// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  MODERATOR
  GUEST
}

enum AccountType {
  FREE
  MEDIUM
  PREMIUM
}

model User {
  id           Int          @id @default(autoincrement())
  uuid         String       @unique @default(uuid())
  email        String       @unique
  password     String
  name         String?
  refreshToken String?
  accessToken  String?
  role         Role         @default(USER)
  accountType  AccountType  @default(FREE)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  connections  Connection[]
  Log          Log[]
}

model Connection {
  id         Int         @id @default(autoincrement())
  host       String // Docker host bilgisi
  port       Int // Docker port bilgisi
  tlsConfig  Json? // TLS yapılandırması (isteğe bağlı)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  ownerId    Int // Kullanıcı ID'si
  owner      User        @relation(fields: [ownerId], references: [id])
  containers Container[]
}

model Container {
  id           Int        @id @default(autoincrement())
  name         String
  image        String
  status       String
  connectionId Int
  connection   Connection @relation(fields: [connectionId], references: [id])
  createdAt    DateTime   @default(now())
}

model Log {
  id        Int      @id @default(autoincrement())
  action    String
  timestamp DateTime @default(now())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  serverId  Int
}

model BlacklistedToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@index([expiresAt])
  @@index([token])
  @@map("blacklistedTokens")
}
